|genius_board
CLOCK_50 => mouse_ctrl:mousectrl.clk
CLOCK_50 => counter[0].CLK
CLOCK_50 => counter[1].CLK
CLOCK_50 => counter[2].CLK
CLOCK_50 => counter[3].CLK
CLOCK_50 => counter[4].CLK
CLOCK_50 => counter[5].CLK
CLOCK_50 => counter[6].CLK
CLOCK_50 => counter[7].CLK
CLOCK_50 => counter[8].CLK
CLOCK_50 => counter[9].CLK
CLOCK_50 => counter[10].CLK
CLOCK_50 => counter[11].CLK
CLOCK_50 => counter[12].CLK
CLOCK_50 => counter[13].CLK
CLOCK_50 => counter[14].CLK
CLOCK_50 => counter[15].CLK
CLOCK_50 => counter[16].CLK
CLOCK_50 => counter[17].CLK
CLOCK_50 => counter[18].CLK
CLOCK_50 => counter[19].CLK
CLOCK_50 => counter[20].CLK
CLOCK_50 => counter[21].CLK
CLOCK_50 => counter[22].CLK
CLOCK_50 => counter[23].CLK
CLOCK_50 => counter[24].CLK
CLOCK_50 => counter[25].CLK
CLOCK_50 => counter[26].CLK
CLOCK_50 => counter[27].CLK
CLOCK_50 => counter[28].CLK
CLOCK_50 => counter[29].CLK
CLOCK_50 => counter[30].CLK
CLOCK_50 => counter[31].CLK
CLOCK_50 => colors_shown[0].CLK
CLOCK_50 => colors_shown[1].CLK
CLOCK_50 => colors_shown[2].CLK
CLOCK_50 => colors_shown[3].CLK
CLOCK_50 => colors_shown[4].CLK
CLOCK_50 => colors_shown[5].CLK
CLOCK_50 => colors_shown[6].CLK
CLOCK_50 => colors_shown[7].CLK
CLOCK_50 => colors_shown[8].CLK
CLOCK_50 => colors_shown[9].CLK
CLOCK_50 => show_color_led.CLK
CLOCK_50 => round_number[0].CLK
CLOCK_50 => round_number[1].CLK
CLOCK_50 => round_number[2].CLK
CLOCK_50 => round_number[3].CLK
CLOCK_50 => round_number[4].CLK
CLOCK_50 => round_number[5].CLK
CLOCK_50 => round_number[6].CLK
CLOCK_50 => round_number[7].CLK
CLOCK_50 => round_number[8].CLK
CLOCK_50 => round_number[9].CLK
CLOCK_50 => addr_mem[0].CLK
CLOCK_50 => addr_mem[1].CLK
CLOCK_50 => addr_mem[2].CLK
CLOCK_50 => addr_mem[3].CLK
CLOCK_50 => addr_mem[4].CLK
CLOCK_50 => addr_mem[5].CLK
CLOCK_50 => addr_mem[6].CLK
CLOCK_50 => addr_mem[7].CLK
CLOCK_50 => addr_mem[8].CLK
CLOCK_50 => addr_mem[9].CLK
CLOCK_50 => Write_Enable.CLK
CLOCK_50 => estado_vector[0].CLK
CLOCK_50 => estado_vector[1].CLK
CLOCK_50 => estado_vector[2].CLK
CLOCK_50 => estado_vector[3].CLK
CLOCK_50 => estado_vector[4].CLK
CLOCK_50 => line_mouse[0].CLK
CLOCK_50 => line_mouse[1].CLK
CLOCK_50 => line_mouse[2].CLK
CLOCK_50 => line_mouse[3].CLK
CLOCK_50 => line_mouse[4].CLK
CLOCK_50 => line_mouse[5].CLK
CLOCK_50 => line_mouse[6].CLK
CLOCK_50 => col_mouse[0].CLK
CLOCK_50 => col_mouse[1].CLK
CLOCK_50 => col_mouse[2].CLK
CLOCK_50 => col_mouse[3].CLK
CLOCK_50 => col_mouse[4].CLK
CLOCK_50 => col_mouse[5].CLK
CLOCK_50 => col_mouse[6].CLK
CLOCK_50 => vga_controller:vga_controller_instance.CLOCK_50
CLOCK_50 => generate_random_color:generate_random_color_instance.CLOCK_50
CLOCK_50 => ram_block:memory_acess.Clock
CLOCK_50 => checking_color:checking_color_instance.CLOCK_50
CLOCK_50 => estado~6.DATAIN
KEY[0] => check.IN0
KEY[0] => mouse_ctrl:mousectrl.resetn
KEY[0] => checking_color:checking_color_instance.KEY[0]
KEY[1] => check.IN1
KEY[1] => checking_color:checking_color_instance.KEY[1]
KEY[2] => check.IN1
KEY[2] => checking_color:checking_color_instance.KEY[2]
KEY[3] => check.IN1
KEY[3] => checking_color:checking_color_instance.KEY[3]
LEDR[0] <= checking_color:checking_color_instance.LEDR[0]
LEDR[1] <= checking_color:checking_color_instance.LEDR[1]
LEDR[2] <= checking_color:checking_color_instance.LEDR[2]
LEDR[3] <= checking_color:checking_color_instance.LEDR[3]
LEDR[4] <= checking_color:checking_color_instance.LEDR[4]
LEDR[5] <= mouse_ctrl:mousectrl.bt_on[0]
LEDR[6] <= mouse_ctrl:mousectrl.bt_on[1]
LEDR[7] <= mouse_ctrl:mousectrl.bt_on[2]
VGA_R[0] <= vga_controller:vga_controller_instance.VGA_R[0]
VGA_R[1] <= vga_controller:vga_controller_instance.VGA_R[1]
VGA_R[2] <= vga_controller:vga_controller_instance.VGA_R[2]
VGA_R[3] <= vga_controller:vga_controller_instance.VGA_R[3]
VGA_R[4] <= vga_controller:vga_controller_instance.VGA_R[4]
VGA_R[5] <= vga_controller:vga_controller_instance.VGA_R[5]
VGA_R[6] <= vga_controller:vga_controller_instance.VGA_R[6]
VGA_R[7] <= vga_controller:vga_controller_instance.VGA_R[7]
VGA_G[0] <= vga_controller:vga_controller_instance.VGA_G[0]
VGA_G[1] <= vga_controller:vga_controller_instance.VGA_G[1]
VGA_G[2] <= vga_controller:vga_controller_instance.VGA_G[2]
VGA_G[3] <= vga_controller:vga_controller_instance.VGA_G[3]
VGA_G[4] <= vga_controller:vga_controller_instance.VGA_G[4]
VGA_G[5] <= vga_controller:vga_controller_instance.VGA_G[5]
VGA_G[6] <= vga_controller:vga_controller_instance.VGA_G[6]
VGA_G[7] <= vga_controller:vga_controller_instance.VGA_G[7]
VGA_B[0] <= vga_controller:vga_controller_instance.VGA_B[0]
VGA_B[1] <= vga_controller:vga_controller_instance.VGA_B[1]
VGA_B[2] <= vga_controller:vga_controller_instance.VGA_B[2]
VGA_B[3] <= vga_controller:vga_controller_instance.VGA_B[3]
VGA_B[4] <= vga_controller:vga_controller_instance.VGA_B[4]
VGA_B[5] <= vga_controller:vga_controller_instance.VGA_B[5]
VGA_B[6] <= vga_controller:vga_controller_instance.VGA_B[6]
VGA_B[7] <= vga_controller:vga_controller_instance.VGA_B[7]
VGA_HS <= vga_controller:vga_controller_instance.VGA_HS
VGA_VS <= vga_controller:vga_controller_instance.VGA_VS
VGA_BLANK_N <= vga_controller:vga_controller_instance.VGA_BLANK_N
VGA_SYNC_N <= vga_controller:vga_controller_instance.VGA_SYNC_N
VGA_CLK <= vga_controller:vga_controller_instance.VGA_CLK
PS2_DAT <> mouse_ctrl:mousectrl.ps2_data
PS2_CLK <> mouse_ctrl:mousectrl.ps2_clk
HEX0[0] <= bin2hex:hexseg0.HEX0[0]
HEX0[1] <= bin2hex:hexseg0.HEX0[1]
HEX0[2] <= bin2hex:hexseg0.HEX0[2]
HEX0[3] <= bin2hex:hexseg0.HEX0[3]
HEX0[4] <= bin2hex:hexseg0.HEX0[4]
HEX0[5] <= bin2hex:hexseg0.HEX0[5]
HEX0[6] <= bin2hex:hexseg0.HEX0[6]
HEX1[0] <= bin2hex:hexseg1.HEX0[0]
HEX1[1] <= bin2hex:hexseg1.HEX0[1]
HEX1[2] <= bin2hex:hexseg1.HEX0[2]
HEX1[3] <= bin2hex:hexseg1.HEX0[3]
HEX1[4] <= bin2hex:hexseg1.HEX0[4]
HEX1[5] <= bin2hex:hexseg1.HEX0[5]
HEX1[6] <= bin2hex:hexseg1.HEX0[6]
HEX2[0] <= bin2hex:hexseg2.HEX0[0]
HEX2[1] <= bin2hex:hexseg2.HEX0[1]
HEX2[2] <= bin2hex:hexseg2.HEX0[2]
HEX2[3] <= bin2hex:hexseg2.HEX0[3]
HEX2[4] <= bin2hex:hexseg2.HEX0[4]
HEX2[5] <= bin2hex:hexseg2.HEX0[5]
HEX2[6] <= bin2hex:hexseg2.HEX0[6]
HEX3[0] <= bin2hex:hexseg3.HEX0[0]
HEX3[1] <= bin2hex:hexseg3.HEX0[1]
HEX3[2] <= bin2hex:hexseg3.HEX0[2]
HEX3[3] <= bin2hex:hexseg3.HEX0[3]
HEX3[4] <= bin2hex:hexseg3.HEX0[4]
HEX3[5] <= bin2hex:hexseg3.HEX0[5]
HEX3[6] <= bin2hex:hexseg3.HEX0[6]
HEX4[0] <= bin2hex:seg_light.HEX0[0]
HEX4[1] <= bin2hex:seg_light.HEX0[1]
HEX4[2] <= bin2hex:seg_light.HEX0[2]
HEX4[3] <= bin2hex:seg_light.HEX0[3]
HEX4[4] <= bin2hex:seg_light.HEX0[4]
HEX4[5] <= bin2hex:seg_light.HEX0[5]
HEX4[6] <= bin2hex:seg_light.HEX0[6]
HEX5[0] <= bin2hex:seg_1.HEX0[0]
HEX5[1] <= bin2hex:seg_1.HEX0[1]
HEX5[2] <= bin2hex:seg_1.HEX0[2]
HEX5[3] <= bin2hex:seg_1.HEX0[3]
HEX5[4] <= bin2hex:seg_1.HEX0[4]
HEX5[5] <= bin2hex:seg_1.HEX0[5]
HEX5[6] <= bin2hex:seg_1.HEX0[6]


|genius_board|mouse_ctrl:mousectrl
ps2_data <> ps2_iobase:ps2io.ps2_data
ps2_clk <> ps2_iobase:ps2io.ps2_clk
clk => ps2_iobase:ps2io.clk
clk => sigwheel.CLK
clk => sigreseting.CLK
clk => sigsend.CLK
clk => hdata[0].CLK
clk => hdata[1].CLK
clk => hdata[2].CLK
clk => hdata[3].CLK
clk => hdata[4].CLK
clk => hdata[5].CLK
clk => hdata[6].CLK
clk => hdata[7].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => state~6.DATAIN
en => process_1.IN1
en => ps2_iobase:ps2io.en
en => process_1.IN0
resetn => ps2_iobase:ps2io.resetn
resetn => process_1.IN1
newdata <= newdata~reg0.DB_MAX_OUTPUT_PORT_TYPE
bt_on[0] <= bt_on[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bt_on[1] <= bt_on[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
bt_on[2] <= bt_on[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ox <= ox~reg0.DB_MAX_OUTPUT_PORT_TYPE
oy <= oy~reg0.DB_MAX_OUTPUT_PORT_TYPE
dx[0] <= dx[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dx[1] <= dx[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dx[2] <= dx[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dx[3] <= dx[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dx[4] <= dx[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dx[5] <= dx[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dx[6] <= dx[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dx[7] <= dx[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dx[8] <= dx[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dy[0] <= dy[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dy[1] <= dy[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dy[2] <= dy[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dy[3] <= dy[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dy[4] <= dy[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dy[5] <= dy[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dy[6] <= dy[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dy[7] <= dy[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dy[8] <= dy[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wheel[0] <= wheel[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wheel[1] <= wheel[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wheel[2] <= wheel[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wheel[3] <= wheel[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|genius_board|mouse_ctrl:mousectrl|ps2_iobase:ps2io
ps2_data <> ps2_data
ps2_clk <> ps2_clk
clk => sigclkheld.CLK
clk => sigclkreleased.CLK
clk => ps2_clk~reg0.CLK
clk => ps2_clk~en.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => send_rdy~reg0.CLK
clk => countclk[0].CLK
clk => countclk[1].CLK
clk => countclk[2].CLK
clk => countclk[3].CLK
clk => countclk[4].CLK
clk => countclk[5].CLK
clk => countclk[6].CLK
clk => countclk[7].CLK
clk => countclk[8].CLK
clk => countclk[9].CLK
clk => countclk[10].CLK
clk => countclk[11].CLK
clk => countclk[12].CLK
clk => countclk[13].CLK
clk => countclk[14].CLK
clk => countclk[15].CLK
clk => countclk[16].CLK
clk => countclk[17].CLK
clk => countclk[18].CLK
clk => countclk[19].CLK
clk => sigtrigger.CLK
clk => rcount[0].CLK
clk => rcount[1].CLK
clk => rcount[2].CLK
clk => rcount[3].CLK
clk => rcount[4].CLK
clk => rcount[5].CLK
clk => rcount[6].CLK
clk => rcount[7].CLK
clk => rcount[8].CLK
clk => fcount[0].CLK
clk => fcount[1].CLK
clk => fcount[2].CLK
clk => fcount[3].CLK
clk => fcount[4].CLK
clk => fcount[5].CLK
clk => fcount[6].CLK
clk => fcount[7].CLK
clk => fcount[8].CLK
en => odata_rdy.IN1
en => fcount[8].ENA
en => fcount[7].ENA
en => fcount[6].ENA
en => fcount[5].ENA
en => fcount[4].ENA
en => fcount[3].ENA
en => fcount[2].ENA
en => fcount[1].ENA
en => fcount[0].ENA
en => rcount[8].ENA
en => rcount[7].ENA
en => rcount[6].ENA
en => rcount[5].ENA
en => rcount[4].ENA
en => rcount[3].ENA
en => rcount[2].ENA
en => rcount[1].ENA
en => sigtrigger.ENA
en => rcount[0].ENA
resetn => send_rdy.IN1
resetn => send_rdy~reg0.PRESET
resetn => FROMPS2.IN1
resetn => sigtrigger.ACLR
resetn => rcount[0].ACLR
resetn => rcount[1].ACLR
resetn => rcount[2].ACLR
resetn => rcount[3].ACLR
resetn => rcount[4].ACLR
resetn => rcount[5].ACLR
resetn => rcount[6].ACLR
resetn => rcount[7].ACLR
resetn => rcount[8].ACLR
resetn => fcount[0].ACLR
resetn => fcount[1].ACLR
resetn => fcount[2].ACLR
resetn => fcount[3].ACLR
resetn => fcount[4].ACLR
resetn => fcount[5].ACLR
resetn => fcount[6].ACLR
resetn => fcount[7].ACLR
resetn => fcount[8].ACLR
resetn => process_2.IN1
resetn => TOPS2.IN1
idata_rdy => hdata[0].CLK
idata_rdy => hdata[1].CLK
idata_rdy => hdata[2].CLK
idata_rdy => hdata[3].CLK
idata_rdy => hdata[4].CLK
idata_rdy => hdata[5].CLK
idata_rdy => hdata[6].CLK
idata_rdy => hdata[7].CLK
idata_rdy => sigsending.CLK
idata[0] => hdata[0].DATAIN
idata[1] => hdata[1].DATAIN
idata[2] => hdata[2].DATAIN
idata[3] => hdata[3].DATAIN
idata[4] => hdata[4].DATAIN
idata[5] => hdata[5].DATAIN
idata[6] => hdata[6].DATAIN
idata[7] => hdata[7].DATAIN
send_rdy <= send_rdy~reg0.DB_MAX_OUTPUT_PORT_TYPE
odata_rdy <= odata_rdy.DB_MAX_OUTPUT_PORT_TYPE
odata[0] <= sdata[0].DB_MAX_OUTPUT_PORT_TYPE
odata[1] <= sdata[1].DB_MAX_OUTPUT_PORT_TYPE
odata[2] <= sdata[2].DB_MAX_OUTPUT_PORT_TYPE
odata[3] <= sdata[3].DB_MAX_OUTPUT_PORT_TYPE
odata[4] <= sdata[4].DB_MAX_OUTPUT_PORT_TYPE
odata[5] <= sdata[5].DB_MAX_OUTPUT_PORT_TYPE
odata[6] <= sdata[6].DB_MAX_OUTPUT_PORT_TYPE
odata[7] <= sdata[7].DB_MAX_OUTPUT_PORT_TYPE


|genius_board|bin2hex:hexseg0
SW[0] => Mux0.IN19
SW[0] => Mux1.IN19
SW[0] => Mux2.IN19
SW[0] => Mux3.IN19
SW[0] => Mux4.IN19
SW[0] => Mux5.IN19
SW[0] => Mux6.IN19
SW[1] => Mux0.IN18
SW[1] => Mux1.IN18
SW[1] => Mux2.IN18
SW[1] => Mux3.IN18
SW[1] => Mux4.IN18
SW[1] => Mux5.IN18
SW[1] => Mux6.IN18
SW[2] => Mux0.IN17
SW[2] => Mux1.IN17
SW[2] => Mux2.IN17
SW[2] => Mux3.IN17
SW[2] => Mux4.IN17
SW[2] => Mux5.IN17
SW[2] => Mux6.IN17
SW[3] => Mux0.IN16
SW[3] => Mux1.IN16
SW[3] => Mux2.IN16
SW[3] => Mux3.IN16
SW[3] => Mux4.IN16
SW[3] => Mux5.IN16
SW[3] => Mux6.IN16
HEX0[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
HEX0[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
HEX0[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
HEX0[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
HEX0[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
HEX0[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
HEX0[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|genius_board|bin2hex:hexseg1
SW[0] => Mux0.IN19
SW[0] => Mux1.IN19
SW[0] => Mux2.IN19
SW[0] => Mux3.IN19
SW[0] => Mux4.IN19
SW[0] => Mux5.IN19
SW[0] => Mux6.IN19
SW[1] => Mux0.IN18
SW[1] => Mux1.IN18
SW[1] => Mux2.IN18
SW[1] => Mux3.IN18
SW[1] => Mux4.IN18
SW[1] => Mux5.IN18
SW[1] => Mux6.IN18
SW[2] => Mux0.IN17
SW[2] => Mux1.IN17
SW[2] => Mux2.IN17
SW[2] => Mux3.IN17
SW[2] => Mux4.IN17
SW[2] => Mux5.IN17
SW[2] => Mux6.IN17
SW[3] => Mux0.IN16
SW[3] => Mux1.IN16
SW[3] => Mux2.IN16
SW[3] => Mux3.IN16
SW[3] => Mux4.IN16
SW[3] => Mux5.IN16
SW[3] => Mux6.IN16
HEX0[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
HEX0[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
HEX0[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
HEX0[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
HEX0[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
HEX0[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
HEX0[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|genius_board|bin2hex:hexseg2
SW[0] => Mux0.IN19
SW[0] => Mux1.IN19
SW[0] => Mux2.IN19
SW[0] => Mux3.IN19
SW[0] => Mux4.IN19
SW[0] => Mux5.IN19
SW[0] => Mux6.IN19
SW[1] => Mux0.IN18
SW[1] => Mux1.IN18
SW[1] => Mux2.IN18
SW[1] => Mux3.IN18
SW[1] => Mux4.IN18
SW[1] => Mux5.IN18
SW[1] => Mux6.IN18
SW[2] => Mux0.IN17
SW[2] => Mux1.IN17
SW[2] => Mux2.IN17
SW[2] => Mux3.IN17
SW[2] => Mux4.IN17
SW[2] => Mux5.IN17
SW[2] => Mux6.IN17
SW[3] => Mux0.IN16
SW[3] => Mux1.IN16
SW[3] => Mux2.IN16
SW[3] => Mux3.IN16
SW[3] => Mux4.IN16
SW[3] => Mux5.IN16
SW[3] => Mux6.IN16
HEX0[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
HEX0[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
HEX0[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
HEX0[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
HEX0[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
HEX0[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
HEX0[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|genius_board|bin2hex:hexseg3
SW[0] => Mux0.IN19
SW[0] => Mux1.IN19
SW[0] => Mux2.IN19
SW[0] => Mux3.IN19
SW[0] => Mux4.IN19
SW[0] => Mux5.IN19
SW[0] => Mux6.IN19
SW[1] => Mux0.IN18
SW[1] => Mux1.IN18
SW[1] => Mux2.IN18
SW[1] => Mux3.IN18
SW[1] => Mux4.IN18
SW[1] => Mux5.IN18
SW[1] => Mux6.IN18
SW[2] => Mux0.IN17
SW[2] => Mux1.IN17
SW[2] => Mux2.IN17
SW[2] => Mux3.IN17
SW[2] => Mux4.IN17
SW[2] => Mux5.IN17
SW[2] => Mux6.IN17
SW[3] => Mux0.IN16
SW[3] => Mux1.IN16
SW[3] => Mux2.IN16
SW[3] => Mux3.IN16
SW[3] => Mux4.IN16
SW[3] => Mux5.IN16
SW[3] => Mux6.IN16
HEX0[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
HEX0[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
HEX0[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
HEX0[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
HEX0[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
HEX0[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
HEX0[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|genius_board|vga_controller:vga_controller_instance
CLOCK_50 => vgacon:vga_controller.clk50M
CLOCK_50 => pixel[0].CLK
CLOCK_50 => pixel[1].CLK
CLOCK_50 => pixel[2].CLK
CLOCK_50 => we.CLK
CLOCK_50 => line[0].CLK
CLOCK_50 => line[1].CLK
CLOCK_50 => line[2].CLK
CLOCK_50 => line[3].CLK
CLOCK_50 => line[4].CLK
CLOCK_50 => line[5].CLK
CLOCK_50 => line[6].CLK
CLOCK_50 => col[0].CLK
CLOCK_50 => col[1].CLK
CLOCK_50 => col[2].CLK
CLOCK_50 => col[3].CLK
CLOCK_50 => col[4].CLK
CLOCK_50 => col[5].CLK
CLOCK_50 => col[6].CLK
CLOCK_50 => vgacon:vga_controller.write_clk
estado_vector[0] => Equal7.IN3
estado_vector[0] => Equal33.IN3
estado_vector[1] => Equal7.IN4
estado_vector[1] => Equal33.IN2
estado_vector[2] => Equal7.IN2
estado_vector[2] => Equal33.IN1
estado_vector[3] => Equal7.IN1
estado_vector[3] => Equal33.IN0
estado_vector[4] => Equal7.IN0
estado_vector[4] => Equal33.IN4
line_mouse[0] => Equal3.IN6
line_mouse[1] => Equal3.IN5
line_mouse[2] => Equal3.IN4
line_mouse[3] => Equal3.IN3
line_mouse[4] => Equal3.IN2
line_mouse[5] => Equal3.IN1
line_mouse[6] => Equal3.IN0
col_mouse[0] => Equal2.IN6
col_mouse[1] => Equal2.IN5
col_mouse[2] => Equal2.IN4
col_mouse[3] => Equal2.IN3
col_mouse[4] => Equal2.IN2
col_mouse[5] => Equal2.IN1
col_mouse[6] => Equal2.IN0
show_color_led => process_2.IN1
show_color_led => process_2.IN1
show_color_led => process_2.IN1
show_color_led => process_2.IN1
color_ram_output[0] => Equal4.IN1
color_ram_output[0] => Equal5.IN0
color_ram_output[0] => Equal6.IN1
color_ram_output[0] => Equal8.IN2
color_ram_output[1] => Equal4.IN2
color_ram_output[1] => Equal5.IN2
color_ram_output[1] => Equal6.IN0
color_ram_output[1] => Equal8.IN1
color_ram_output[2] => Equal4.IN0
color_ram_output[2] => Equal5.IN1
color_ram_output[2] => Equal6.IN2
color_ram_output[2] => Equal8.IN0
VGA_R[0] <= vgacon:vga_controller.red[0]
VGA_R[1] <= vgacon:vga_controller.red[1]
VGA_R[2] <= vgacon:vga_controller.red[2]
VGA_R[3] <= vgacon:vga_controller.red[3]
VGA_R[4] <= vgacon:vga_controller.red[4]
VGA_R[5] <= vgacon:vga_controller.red[5]
VGA_R[6] <= vgacon:vga_controller.red[6]
VGA_R[7] <= vgacon:vga_controller.red[7]
VGA_G[0] <= vgacon:vga_controller.green[0]
VGA_G[1] <= vgacon:vga_controller.green[1]
VGA_G[2] <= vgacon:vga_controller.green[2]
VGA_G[3] <= vgacon:vga_controller.green[3]
VGA_G[4] <= vgacon:vga_controller.green[4]
VGA_G[5] <= vgacon:vga_controller.green[5]
VGA_G[6] <= vgacon:vga_controller.green[6]
VGA_G[7] <= vgacon:vga_controller.green[7]
VGA_B[0] <= vgacon:vga_controller.blue[0]
VGA_B[1] <= vgacon:vga_controller.blue[1]
VGA_B[2] <= vgacon:vga_controller.blue[2]
VGA_B[3] <= vgacon:vga_controller.blue[3]
VGA_B[4] <= vgacon:vga_controller.blue[4]
VGA_B[5] <= vgacon:vga_controller.blue[5]
VGA_B[6] <= vgacon:vga_controller.blue[6]
VGA_B[7] <= vgacon:vga_controller.blue[7]
VGA_HS <= vgacon:vga_controller.hsync
VGA_VS <= vgacon:vga_controller.vsync
VGA_BLANK_N <= vgacon:vga_controller.blank
VGA_SYNC_N <= vgacon:vga_controller.sync
VGA_CLK <= vgacon:vga_controller.vga_clk


|genius_board|vga_controller:vga_controller_instance|vgacon:vga_controller
clk50M => vga_pll:divider.refclk
rstn => vga_pll:divider.rst
rstn => h_count_d[0].ACLR
rstn => h_count_d[1].ACLR
rstn => h_count_d[2].ACLR
rstn => h_count_d[3].ACLR
rstn => h_count_d[4].ACLR
rstn => h_count_d[5].ACLR
rstn => h_count_d[6].ACLR
rstn => h_count_d[7].ACLR
rstn => h_count_d[8].ACLR
rstn => h_count_d[9].ACLR
rstn => h_count[0].ACLR
rstn => h_count[1].ACLR
rstn => h_count[2].ACLR
rstn => h_count[3].ACLR
rstn => h_count[4].ACLR
rstn => h_count[5].ACLR
rstn => h_count[6].ACLR
rstn => h_count[7].ACLR
rstn => h_count[8].ACLR
rstn => h_count[9].ACLR
rstn => v_count_d[0].ACLR
rstn => v_count_d[1].ACLR
rstn => v_count_d[2].ACLR
rstn => v_count_d[3].ACLR
rstn => v_count_d[4].ACLR
rstn => v_count_d[5].ACLR
rstn => v_count_d[6].ACLR
rstn => v_count_d[7].ACLR
rstn => v_count_d[8].ACLR
rstn => v_count_d[9].ACLR
rstn => v_count[0].ACLR
rstn => v_count[1].ACLR
rstn => v_count[2].ACLR
rstn => v_count[3].ACLR
rstn => v_count[4].ACLR
rstn => v_count[5].ACLR
rstn => v_count[6].ACLR
rstn => v_count[7].ACLR
rstn => v_count[8].ACLR
rstn => v_count[9].ACLR
write_clk => dual_clock_ram:vgamem.write_clk
write_enable => dual_clock_ram:vgamem.we
write_addr[0] => dual_clock_ram:vgamem.write_address[0]
write_addr[1] => dual_clock_ram:vgamem.write_address[1]
write_addr[2] => dual_clock_ram:vgamem.write_address[2]
write_addr[3] => dual_clock_ram:vgamem.write_address[3]
write_addr[4] => dual_clock_ram:vgamem.write_address[4]
write_addr[5] => dual_clock_ram:vgamem.write_address[5]
write_addr[6] => dual_clock_ram:vgamem.write_address[6]
write_addr[7] => dual_clock_ram:vgamem.write_address[7]
write_addr[8] => dual_clock_ram:vgamem.write_address[8]
write_addr[9] => dual_clock_ram:vgamem.write_address[9]
write_addr[10] => dual_clock_ram:vgamem.write_address[10]
write_addr[11] => dual_clock_ram:vgamem.write_address[11]
write_addr[12] => dual_clock_ram:vgamem.write_address[12]
write_addr[13] => dual_clock_ram:vgamem.write_address[13]
data_in[0] => dual_clock_ram:vgamem.data_in[0]
data_in[1] => dual_clock_ram:vgamem.data_in[1]
data_in[2] => dual_clock_ram:vgamem.data_in[2]
vga_clk <= vga_pll:divider.outclk_0
red[0] <= red.DB_MAX_OUTPUT_PORT_TYPE
red[1] <= red.DB_MAX_OUTPUT_PORT_TYPE
red[2] <= red.DB_MAX_OUTPUT_PORT_TYPE
red[3] <= red.DB_MAX_OUTPUT_PORT_TYPE
red[4] <= red.DB_MAX_OUTPUT_PORT_TYPE
red[5] <= red.DB_MAX_OUTPUT_PORT_TYPE
red[6] <= red.DB_MAX_OUTPUT_PORT_TYPE
red[7] <= red.DB_MAX_OUTPUT_PORT_TYPE
green[0] <= green.DB_MAX_OUTPUT_PORT_TYPE
green[1] <= green.DB_MAX_OUTPUT_PORT_TYPE
green[2] <= green.DB_MAX_OUTPUT_PORT_TYPE
green[3] <= green.DB_MAX_OUTPUT_PORT_TYPE
green[4] <= green.DB_MAX_OUTPUT_PORT_TYPE
green[5] <= green.DB_MAX_OUTPUT_PORT_TYPE
green[6] <= green.DB_MAX_OUTPUT_PORT_TYPE
green[7] <= green.DB_MAX_OUTPUT_PORT_TYPE
blue[0] <= blue.DB_MAX_OUTPUT_PORT_TYPE
blue[1] <= blue.DB_MAX_OUTPUT_PORT_TYPE
blue[2] <= blue.DB_MAX_OUTPUT_PORT_TYPE
blue[3] <= blue.DB_MAX_OUTPUT_PORT_TYPE
blue[4] <= blue.DB_MAX_OUTPUT_PORT_TYPE
blue[5] <= blue.DB_MAX_OUTPUT_PORT_TYPE
blue[6] <= blue.DB_MAX_OUTPUT_PORT_TYPE
blue[7] <= blue.DB_MAX_OUTPUT_PORT_TYPE
hsync <= synchronization.DB_MAX_OUTPUT_PORT_TYPE
vsync <= synchronization.DB_MAX_OUTPUT_PORT_TYPE
sync <= <VCC>
blank <= <GND>


|genius_board|vga_controller:vga_controller_instance|vgacon:vga_controller|vga_pll:divider
refclk => vga_pll_0002:vga_pll_inst.refclk
rst => vga_pll_0002:vga_pll_inst.rst
outclk_0 <= vga_pll_0002:vga_pll_inst.outclk_0


|genius_board|vga_controller:vga_controller_instance|vgacon:vga_controller|vga_pll:divider|vga_pll_0002:vga_pll_inst
refclk => refclk.IN1
rst => rst.IN1
outclk_0 <= altera_pll:altera_pll_i.outclk
locked <= altera_pll:altera_pll_i.locked


|genius_board|vga_controller:vga_controller_instance|vgacon:vga_controller|vga_pll:divider|vga_pll_0002:vga_pll_inst|altera_pll:altera_pll_i
refclk => general[0].gpll.I_REFCLK
refclk1 => ~NO_FANOUT~
fbclk => ~NO_FANOUT~
rst => general[0].gpll.I_RST
phase_en => ~NO_FANOUT~
updn => ~NO_FANOUT~
num_phase_shifts[0] => ~NO_FANOUT~
num_phase_shifts[1] => ~NO_FANOUT~
num_phase_shifts[2] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
cntsel[0] => ~NO_FANOUT~
cntsel[1] => ~NO_FANOUT~
cntsel[2] => ~NO_FANOUT~
cntsel[3] => ~NO_FANOUT~
cntsel[4] => ~NO_FANOUT~
reconfig_to_pll[0] => ~NO_FANOUT~
reconfig_to_pll[1] => ~NO_FANOUT~
reconfig_to_pll[2] => ~NO_FANOUT~
reconfig_to_pll[3] => ~NO_FANOUT~
reconfig_to_pll[4] => ~NO_FANOUT~
reconfig_to_pll[5] => ~NO_FANOUT~
reconfig_to_pll[6] => ~NO_FANOUT~
reconfig_to_pll[7] => ~NO_FANOUT~
reconfig_to_pll[8] => ~NO_FANOUT~
reconfig_to_pll[9] => ~NO_FANOUT~
reconfig_to_pll[10] => ~NO_FANOUT~
reconfig_to_pll[11] => ~NO_FANOUT~
reconfig_to_pll[12] => ~NO_FANOUT~
reconfig_to_pll[13] => ~NO_FANOUT~
reconfig_to_pll[14] => ~NO_FANOUT~
reconfig_to_pll[15] => ~NO_FANOUT~
reconfig_to_pll[16] => ~NO_FANOUT~
reconfig_to_pll[17] => ~NO_FANOUT~
reconfig_to_pll[18] => ~NO_FANOUT~
reconfig_to_pll[19] => ~NO_FANOUT~
reconfig_to_pll[20] => ~NO_FANOUT~
reconfig_to_pll[21] => ~NO_FANOUT~
reconfig_to_pll[22] => ~NO_FANOUT~
reconfig_to_pll[23] => ~NO_FANOUT~
reconfig_to_pll[24] => ~NO_FANOUT~
reconfig_to_pll[25] => ~NO_FANOUT~
reconfig_to_pll[26] => ~NO_FANOUT~
reconfig_to_pll[27] => ~NO_FANOUT~
reconfig_to_pll[28] => ~NO_FANOUT~
reconfig_to_pll[29] => ~NO_FANOUT~
reconfig_to_pll[30] => ~NO_FANOUT~
reconfig_to_pll[31] => ~NO_FANOUT~
reconfig_to_pll[32] => ~NO_FANOUT~
reconfig_to_pll[33] => ~NO_FANOUT~
reconfig_to_pll[34] => ~NO_FANOUT~
reconfig_to_pll[35] => ~NO_FANOUT~
reconfig_to_pll[36] => ~NO_FANOUT~
reconfig_to_pll[37] => ~NO_FANOUT~
reconfig_to_pll[38] => ~NO_FANOUT~
reconfig_to_pll[39] => ~NO_FANOUT~
reconfig_to_pll[40] => ~NO_FANOUT~
reconfig_to_pll[41] => ~NO_FANOUT~
reconfig_to_pll[42] => ~NO_FANOUT~
reconfig_to_pll[43] => ~NO_FANOUT~
reconfig_to_pll[44] => ~NO_FANOUT~
reconfig_to_pll[45] => ~NO_FANOUT~
reconfig_to_pll[46] => ~NO_FANOUT~
reconfig_to_pll[47] => ~NO_FANOUT~
reconfig_to_pll[48] => ~NO_FANOUT~
reconfig_to_pll[49] => ~NO_FANOUT~
reconfig_to_pll[50] => ~NO_FANOUT~
reconfig_to_pll[51] => ~NO_FANOUT~
reconfig_to_pll[52] => ~NO_FANOUT~
reconfig_to_pll[53] => ~NO_FANOUT~
reconfig_to_pll[54] => ~NO_FANOUT~
reconfig_to_pll[55] => ~NO_FANOUT~
reconfig_to_pll[56] => ~NO_FANOUT~
reconfig_to_pll[57] => ~NO_FANOUT~
reconfig_to_pll[58] => ~NO_FANOUT~
reconfig_to_pll[59] => ~NO_FANOUT~
reconfig_to_pll[60] => ~NO_FANOUT~
reconfig_to_pll[61] => ~NO_FANOUT~
reconfig_to_pll[62] => ~NO_FANOUT~
reconfig_to_pll[63] => ~NO_FANOUT~
extswitch => ~NO_FANOUT~
adjpllin => ~NO_FANOUT~
cclk => ~NO_FANOUT~
outclk[0] <= general[0].gpll.O_OUTCLK
fboutclk <= general[0].gpll.O_FBOUTCLK
locked <= general[0].gpll.LOCKED
phase_done <= <GND>
reconfig_from_pll[0] <= <GND>
reconfig_from_pll[1] <= <GND>
reconfig_from_pll[2] <= <GND>
reconfig_from_pll[3] <= <GND>
reconfig_from_pll[4] <= <GND>
reconfig_from_pll[5] <= <GND>
reconfig_from_pll[6] <= <GND>
reconfig_from_pll[7] <= <GND>
reconfig_from_pll[8] <= <GND>
reconfig_from_pll[9] <= <GND>
reconfig_from_pll[10] <= <GND>
reconfig_from_pll[11] <= <GND>
reconfig_from_pll[12] <= <GND>
reconfig_from_pll[13] <= <GND>
reconfig_from_pll[14] <= <GND>
reconfig_from_pll[15] <= <GND>
reconfig_from_pll[16] <= <GND>
reconfig_from_pll[17] <= <GND>
reconfig_from_pll[18] <= <GND>
reconfig_from_pll[19] <= <GND>
reconfig_from_pll[20] <= <GND>
reconfig_from_pll[21] <= <GND>
reconfig_from_pll[22] <= <GND>
reconfig_from_pll[23] <= <GND>
reconfig_from_pll[24] <= <GND>
reconfig_from_pll[25] <= <GND>
reconfig_from_pll[26] <= <GND>
reconfig_from_pll[27] <= <GND>
reconfig_from_pll[28] <= <GND>
reconfig_from_pll[29] <= <GND>
reconfig_from_pll[30] <= <GND>
reconfig_from_pll[31] <= <GND>
reconfig_from_pll[32] <= <GND>
reconfig_from_pll[33] <= <GND>
reconfig_from_pll[34] <= <GND>
reconfig_from_pll[35] <= <GND>
reconfig_from_pll[36] <= <GND>
reconfig_from_pll[37] <= <GND>
reconfig_from_pll[38] <= <GND>
reconfig_from_pll[39] <= <GND>
reconfig_from_pll[40] <= <GND>
reconfig_from_pll[41] <= <GND>
reconfig_from_pll[42] <= <GND>
reconfig_from_pll[43] <= <GND>
reconfig_from_pll[44] <= <GND>
reconfig_from_pll[45] <= <GND>
reconfig_from_pll[46] <= <GND>
reconfig_from_pll[47] <= <GND>
reconfig_from_pll[48] <= <GND>
reconfig_from_pll[49] <= <GND>
reconfig_from_pll[50] <= <GND>
reconfig_from_pll[51] <= <GND>
reconfig_from_pll[52] <= <GND>
reconfig_from_pll[53] <= <GND>
reconfig_from_pll[54] <= <GND>
reconfig_from_pll[55] <= <GND>
reconfig_from_pll[56] <= <GND>
reconfig_from_pll[57] <= <GND>
reconfig_from_pll[58] <= <GND>
reconfig_from_pll[59] <= <GND>
reconfig_from_pll[60] <= <GND>
reconfig_from_pll[61] <= <GND>
reconfig_from_pll[62] <= <GND>
reconfig_from_pll[63] <= <GND>
activeclk <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
phout[0] <= <GND>
phout[1] <= <GND>
phout[2] <= <GND>
phout[3] <= <GND>
phout[4] <= <GND>
phout[5] <= <GND>
phout[6] <= <GND>
phout[7] <= <GND>
lvds_clk[0] <= <GND>
lvds_clk[1] <= <GND>
loaden[0] <= <GND>
loaden[1] <= <GND>
extclk_out[0] <= <GND>
extclk_out[1] <= <GND>
cascade_out[0] <= <GND>
zdbfbclk <> <GND>


|genius_board|vga_controller:vga_controller_instance|vgacon:vga_controller|dual_clock_ram:vgamem
read_clk => data_out[0]~reg0.CLK
read_clk => data_out[1]~reg0.CLK
read_clk => data_out[2]~reg0.CLK
write_clk => ram_block~17.CLK
write_clk => ram_block~0.CLK
write_clk => ram_block~1.CLK
write_clk => ram_block~2.CLK
write_clk => ram_block~3.CLK
write_clk => ram_block~4.CLK
write_clk => ram_block~5.CLK
write_clk => ram_block~6.CLK
write_clk => ram_block~7.CLK
write_clk => ram_block~8.CLK
write_clk => ram_block~9.CLK
write_clk => ram_block~10.CLK
write_clk => ram_block~11.CLK
write_clk => ram_block~12.CLK
write_clk => ram_block~13.CLK
write_clk => ram_block~14.CLK
write_clk => ram_block~15.CLK
write_clk => ram_block~16.CLK
write_clk => ram_block.CLK0
data_in[0] => ram_block~16.DATAIN
data_in[0] => ram_block.DATAIN
data_in[1] => ram_block~15.DATAIN
data_in[1] => ram_block.DATAIN1
data_in[2] => ram_block~14.DATAIN
data_in[2] => ram_block.DATAIN2
write_address[0] => ram_block~13.DATAIN
write_address[0] => ram_block.WADDR
write_address[1] => ram_block~12.DATAIN
write_address[1] => ram_block.WADDR1
write_address[2] => ram_block~11.DATAIN
write_address[2] => ram_block.WADDR2
write_address[3] => ram_block~10.DATAIN
write_address[3] => ram_block.WADDR3
write_address[4] => ram_block~9.DATAIN
write_address[4] => ram_block.WADDR4
write_address[5] => ram_block~8.DATAIN
write_address[5] => ram_block.WADDR5
write_address[6] => ram_block~7.DATAIN
write_address[6] => ram_block.WADDR6
write_address[7] => ram_block~6.DATAIN
write_address[7] => ram_block.WADDR7
write_address[8] => ram_block~5.DATAIN
write_address[8] => ram_block.WADDR8
write_address[9] => ram_block~4.DATAIN
write_address[9] => ram_block.WADDR9
write_address[10] => ram_block~3.DATAIN
write_address[10] => ram_block.WADDR10
write_address[11] => ram_block~2.DATAIN
write_address[11] => ram_block.WADDR11
write_address[12] => ram_block~1.DATAIN
write_address[12] => ram_block.WADDR12
write_address[13] => ram_block~0.DATAIN
write_address[13] => ram_block.WADDR13
read_address[0] => ram_block.RADDR
read_address[1] => ram_block.RADDR1
read_address[2] => ram_block.RADDR2
read_address[3] => ram_block.RADDR3
read_address[4] => ram_block.RADDR4
read_address[5] => ram_block.RADDR5
read_address[6] => ram_block.RADDR6
read_address[7] => ram_block.RADDR7
read_address[8] => ram_block.RADDR8
read_address[9] => ram_block.RADDR9
read_address[10] => ram_block.RADDR10
read_address[11] => ram_block.RADDR11
read_address[12] => ram_block.RADDR12
read_address[13] => ram_block.RADDR13
we => ram_block~17.DATAIN
we => ram_block.WE
data_out[0] <= data_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|genius_board|generate_random_color:generate_random_color_instance
CLOCK_50 => color[0].CLK
CLOCK_50 => color[1].CLK
Write_Enable => ~NO_FANOUT~
color_ram_input[0] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
color_ram_input[1] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
color_ram_input[2] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|genius_board|ram_block:memory_acess
Clock => process_0~13.CLK
Clock => process_0~0.CLK
Clock => process_0~1.CLK
Clock => process_0~2.CLK
Clock => process_0~3.CLK
Clock => process_0~4.CLK
Clock => process_0~5.CLK
Clock => process_0~6.CLK
Clock => process_0~7.CLK
Clock => process_0~8.CLK
Clock => process_0~9.CLK
Clock => process_0~10.CLK
Clock => process_0~11.CLK
Clock => process_0~12.CLK
Clock => ram.CLK0
Address[0] => process_0~9.DATAIN
Address[0] => ram.WADDR
Address[0] => ram.RADDR
Address[1] => process_0~8.DATAIN
Address[1] => ram.WADDR1
Address[1] => ram.RADDR1
Address[2] => process_0~7.DATAIN
Address[2] => ram.WADDR2
Address[2] => ram.RADDR2
Address[3] => process_0~6.DATAIN
Address[3] => ram.WADDR3
Address[3] => ram.RADDR3
Address[4] => process_0~5.DATAIN
Address[4] => ram.WADDR4
Address[4] => ram.RADDR4
Address[5] => process_0~4.DATAIN
Address[5] => ram.WADDR5
Address[5] => ram.RADDR5
Address[6] => process_0~3.DATAIN
Address[6] => ram.WADDR6
Address[6] => ram.RADDR6
Address[7] => process_0~2.DATAIN
Address[7] => ram.WADDR7
Address[7] => ram.RADDR7
Address[8] => process_0~1.DATAIN
Address[8] => ram.WADDR8
Address[8] => ram.RADDR8
Address[9] => process_0~0.DATAIN
Address[9] => ram.WADDR9
Address[9] => ram.RADDR9
Data[0] => process_0~12.DATAIN
Data[0] => ram.DATAIN
Data[1] => process_0~11.DATAIN
Data[1] => ram.DATAIN1
Data[2] => process_0~10.DATAIN
Data[2] => ram.DATAIN2
Q[0] <= ram.DATAOUT
Q[1] <= ram.DATAOUT1
Q[2] <= ram.DATAOUT2
WrEn => process_0~13.DATAIN
WrEn => ram.WE


|genius_board|bin2hex:seg_light
SW[0] => Mux0.IN19
SW[0] => Mux1.IN19
SW[0] => Mux2.IN19
SW[0] => Mux3.IN19
SW[0] => Mux4.IN19
SW[0] => Mux5.IN19
SW[0] => Mux6.IN19
SW[1] => Mux0.IN18
SW[1] => Mux1.IN18
SW[1] => Mux2.IN18
SW[1] => Mux3.IN18
SW[1] => Mux4.IN18
SW[1] => Mux5.IN18
SW[1] => Mux6.IN18
SW[2] => Mux0.IN17
SW[2] => Mux1.IN17
SW[2] => Mux2.IN17
SW[2] => Mux3.IN17
SW[2] => Mux4.IN17
SW[2] => Mux5.IN17
SW[2] => Mux6.IN17
SW[3] => Mux0.IN16
SW[3] => Mux1.IN16
SW[3] => Mux2.IN16
SW[3] => Mux3.IN16
SW[3] => Mux4.IN16
SW[3] => Mux5.IN16
SW[3] => Mux6.IN16
HEX0[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
HEX0[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
HEX0[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
HEX0[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
HEX0[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
HEX0[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
HEX0[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|genius_board|bin2hex:seg_1
SW[0] => Mux0.IN19
SW[0] => Mux1.IN19
SW[0] => Mux2.IN19
SW[0] => Mux3.IN19
SW[0] => Mux4.IN19
SW[0] => Mux5.IN19
SW[0] => Mux6.IN19
SW[1] => Mux0.IN18
SW[1] => Mux1.IN18
SW[1] => Mux2.IN18
SW[1] => Mux3.IN18
SW[1] => Mux4.IN18
SW[1] => Mux5.IN18
SW[1] => Mux6.IN18
SW[2] => Mux0.IN17
SW[2] => Mux1.IN17
SW[2] => Mux2.IN17
SW[2] => Mux3.IN17
SW[2] => Mux4.IN17
SW[2] => Mux5.IN17
SW[2] => Mux6.IN17
SW[3] => Mux0.IN16
SW[3] => Mux1.IN16
SW[3] => Mux2.IN16
SW[3] => Mux3.IN16
SW[3] => Mux4.IN16
SW[3] => Mux5.IN16
SW[3] => Mux6.IN16
HEX0[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
HEX0[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
HEX0[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
HEX0[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
HEX0[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
HEX0[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
HEX0[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|genius_board|checking_color:checking_color_instance
CLOCK_50 => colors_checked[0].CLK
CLOCK_50 => colors_checked[1].CLK
CLOCK_50 => colors_checked[2].CLK
CLOCK_50 => colors_checked[3].CLK
CLOCK_50 => colors_checked[4].CLK
CLOCK_50 => colors_checked[5].CLK
CLOCK_50 => colors_checked[6].CLK
CLOCK_50 => colors_checked[7].CLK
CLOCK_50 => colors_checked[8].CLK
CLOCK_50 => colors_checked[9].CLK
CLOCK_50 => failed~reg0.CLK
CLOCK_50 => pressed[0].CLK
CLOCK_50 => pressed[1].CLK
CLOCK_50 => pressed[2].CLK
CLOCK_50 => pressed[3].CLK
CLOCK_50 => LEDR[4]~reg0.CLK
estado_vector[0] => Equal0.IN9
estado_vector[0] => Equal6.IN9
estado_vector[1] => Equal0.IN8
estado_vector[1] => Equal6.IN8
estado_vector[2] => Equal0.IN7
estado_vector[2] => Equal6.IN7
estado_vector[3] => Equal0.IN6
estado_vector[3] => Equal6.IN6
estado_vector[4] => Equal0.IN5
estado_vector[4] => Equal6.IN5
show_color_led => LEDR.IN1
show_color_led => LEDR.IN1
show_color_led => LEDR.IN1
show_color_led => LEDR.IN1
color_ram_output[0] => Equal2.IN5
color_ram_output[0] => Equal3.IN5
color_ram_output[0] => Equal4.IN5
color_ram_output[0] => Equal5.IN5
color_ram_output[1] => Equal2.IN4
color_ram_output[1] => Equal3.IN4
color_ram_output[1] => Equal4.IN4
color_ram_output[1] => Equal5.IN4
color_ram_output[2] => Equal2.IN3
color_ram_output[2] => Equal3.IN3
color_ram_output[2] => Equal4.IN3
color_ram_output[2] => Equal5.IN3
KEY[0] => process_0.IN1
KEY[0] => process_0.IN1
KEY[0] => process_0.IN0
KEY[1] => process_0.IN1
KEY[1] => process_0.IN1
KEY[1] => process_0.IN1
KEY[2] => process_0.IN1
KEY[2] => process_0.IN1
KEY[2] => process_0.IN1
KEY[3] => process_0.IN1
KEY[3] => process_0.IN1
KEY[3] => process_0.IN1
LEDR[0] <= LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] <= LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] <= LEDR.DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] <= LEDR[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
failed <= failed~reg0.DB_MAX_OUTPUT_PORT_TYPE
colors_checked_output[0] <= colors_checked[0].DB_MAX_OUTPUT_PORT_TYPE
colors_checked_output[1] <= colors_checked[1].DB_MAX_OUTPUT_PORT_TYPE
colors_checked_output[2] <= colors_checked[2].DB_MAX_OUTPUT_PORT_TYPE
colors_checked_output[3] <= colors_checked[3].DB_MAX_OUTPUT_PORT_TYPE
colors_checked_output[4] <= colors_checked[4].DB_MAX_OUTPUT_PORT_TYPE
colors_checked_output[5] <= colors_checked[5].DB_MAX_OUTPUT_PORT_TYPE
colors_checked_output[6] <= colors_checked[6].DB_MAX_OUTPUT_PORT_TYPE
colors_checked_output[7] <= colors_checked[7].DB_MAX_OUTPUT_PORT_TYPE
colors_checked_output[8] <= colors_checked[8].DB_MAX_OUTPUT_PORT_TYPE
colors_checked_output[9] <= colors_checked[9].DB_MAX_OUTPUT_PORT_TYPE


